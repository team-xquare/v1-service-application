name: Build for Prod
on:
  push:
    tags:
      - v*.*.*

env:
  SERVICE_NAME: application
  SERVICE_TYPE: be

jobs:
  build:
    environment: prod
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 16 ]
    outputs:
      version: ${{ steps.get_version.outputs.BRANCH_NAME }}

    steps:
      - name: Check Out The Repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'zulu'
          
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Gradle Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            build
            --no-daemon
            
      - name: Login to ECR
        id: ecr
        uses: elgohr/ecr-login-action@master
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY }}
          secret_access_key: ${{ secrets.AWS_SECRET_KEY }}
          region: ${{ secrets.AWS_REGION }}

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: ${{env.SERVICE_NAME}}-${{env.SERVICE_TYPE}}
          username: ${{ steps.ecr.outputs.username }}
          password: ${{ steps.ecr.outputs.password }}
          registry: ${{ steps.ecr.outputs.registry }}
          tags: ${{ steps.get_version.outputs.VERSION }}
          buildargs: |
            build-args : |
            PROFILE=${{secrets.PROD_PROFILE}}
            CLOUD_CONFIG_USERNAME=${{ secrets.CLOUD_CONFIG_USERNAME }}
            CLOUD_CONFIG_PASSWORD=${{ secrets.CLOUD_CONFIG_PASSWORD }}
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GITOPS_DEPLOY_PRODUCTION_TOKEN }}
          repository: team-xquare/xquare-gitops-repo-production
          event-type: update_image
          client-payload: '{
                          "ref": "${{ github.ref }}", 
                          "version":  "${{ steps.get_version.outputs.VERSION }}",
                          "service_name": "${{env.SERVICE_NAME}}",
                          "service_type": "${{env.SERVICE_TYPE}}"
                          }'
                          
      - name: Deploy to xquare
        uses: team-xquare/xquare-deployment-action@master 
        with:
          environment: prod
          xquare_role_arn: ${{ secrets.XQUARE_ROLE_ARN }}
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
